git:
  quiet: true
  depth: false
env:
  global:
  - TERM=dumb
language: java
service:
- docker
addons:
  apt:
    update: true
    packages:
    - jq
    - sudo
    - lsof
    - wget
    - bash
    - curl
    - unzip
    - docker-ce
    - python3-dev
    - python3-pip
    - python3-six
    - libxml2-utils
    - python3-setuptools
install: true
before_install:
- docker-compose -v
- export PATH=$HOME/.local/bin:$PATH
- pip3 install --user $(whoami) --upgrade pip >/dev/null # pip3 -> pip
- pip install --user $(whoami) --upgrade docker-compose httpie >/dev/null
- http --version
- docker-compose -v
#
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 80 8001 8002 8080 5432
stages:
- test
- deploy
jobs:
  include:
  - stage: test
    jdk: openjdk8
    script:
    - ./mvmw
    - ./mvnw -Pdocker docker-compose:up
    - docker logs -f mvn_thymeleaf-ee-app_1 &
    - while [[ $(docker ps -lqf health=healthy | wc -l) -lt 1 ]] ; do echo -ne '.' ; sleep 3s ; done
    - http :8080/app/
    - ./mvnw -Pdocker docker-compose:down >/dev/null
  - stage: test
    jdk: openjdk11
    script:
    - ./mvmw
    - ./mvnw -Pdocker docker-compose:up
    - docker logs -f mvn_thymeleaf-ee-app_1 &
    - while [[ $(docker ps -lqf health=healthy | wc -l) -lt 1 ]] ; do echo -ne '.' ; sleep 3s ; done
    - http :8080/app/
    - ./mvnw -Pdocker docker-compose:down >/dev/null
  - stage: test
    jdk: openjdk8
    script:
    - ./gradlew
    - ./gradlew composeUp
    - docker logs -f gradle_thymeleaf-ee-app_1 &
    - http :8080/app/
    - http :8080/app/api/
    - http :8080/app/api/health
    - ./gradlew composeDown >/dev/null
    - ./gradlew --stop      >/dev/null
  - stage: test
    jdk: openjdk11
    script:
    - ./gradlew clean build composeUp
    - docker logs -f gradle_thymeleaf-ee-app_1 &
    - http :8080/app/
    - http :8080/app/api/
    - http :8080/app/api/health
    - ./gradlew composeDown >/dev/null
    - ./gradlew --stop      >/dev/null
  - stage: test
    jdk: openjdk11
    script: ./mvnw versions:display-property-updates
  - stage: test
    jdk: openjdk11
    script: ./gradlew dependencyUpdates -Drevision=release
  - stage: deploy
    env:
      global:
      - secure: sMXvtZIcuOx/+W8IxDjLpBtKmZSCsFwJKCw6iiH+Uq3T4AZ5d6WeacNz15IhRjpxBpwZDVJRhU7wWXtbJChEMXpA4qoLLuIPSt4Z0iVAF19Y0dukQalTnwTuDQwWKY39jmZvTgcBIpcY5W7mvPf0bO98T/V8T0k6FfEaKBkpu9+laSR9VHJ2gVHQnDx6eeW6pfEp8GRqAtap6KTHFVAVuwC3MuZ/qH02OZLScjmRKpE8WYC6KWFguTx79PC8m4Hhi0n+LXRlEugCrRGAUoSXbkaV6HiMcDj7SH+V7r9nYMQBTSMBmUWja5ZmUViOf3QYyftRjKUeAgN4Ct6LFaZ1zbLNlG2a5rJuqyrEBD5uo7n2eolLqLR3CD/JKzomsMXxvOO12dUCVUNZa5R/jLFPguAUhSJjvH/+tZJGSxO9wue4EQDod8GI/jx3Vw4Y0SRRRyjdnqgG0p6TF8BV61Qu5OrtbhgccLsmFyLcFNCrtMVJeS3HHVYZEAJYeyQRlWf+152yJEoMNg+GGmXNl5wg6rs+pDT+2x83xyWLqN9YcYFMCoR2UGXVPnJdBcJEGAMMksjfQ3qS7any3Asecvge/jqCiBhIdzM8FMlKemljfv32X5ra+9g/D3lsQF45Q1nviDpY8KeYGmwnP+HO9rpZMUxFW83xZhV6w1EyMDAoWbg=
    jdk: openjdk8
    rvm: 2.6.4
    name: GitHub release and GitHub pages deployment
    script: skip
    if: branch = "master" AND type NOT IN (pull_request)
    before_deploy:
    - if [ "$TRAVIS_PULL_REQUEST" != "false" ] || [ ".$TRAVIS_BRANCH" != ".master" ] ; then exit 0 ; fi
    - set -e
    - ./gradlew documentation
    #- ./mvnw -Pdocs
    - mkdir -p ./target/generated-docs
    - cp -Rf ./target/generated-docs/index.html ./target/generated-docs/404.html
    deploy:
      provider: pages
      skip-cleanup: true
      # travis encrypt GITHUB_TOKEN=<your github repo token> --add
      github-token: "$GITHUB_TOKEN"
      keep-history: true
      on:
        branch: master
      local-dir: target/generated-docs
      target_branch: gh-pages
before_cache:
- find ~/.gradle -name '*.lock' -type f             -print0 | xargs -0 rm -v -rf '{}'
- find ~/.gradle -name 'plugin-resolution' -type d  -print0 | xargs -0 rm -v -rf '{}'
cache:
  pip: true
  packages: true
  directories:
  - $HOME/.docker
  - $HOME/.gradle
  - $HOME/.m2
